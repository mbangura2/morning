provider "aws" {
	region = "ap-south-1"
}

#creating security group

resource "aws_security_group" "nilesh-ssh-http" {
	name = "nilesh-ssh-http"
	description = "allow http and ssh traffic"

	ingress {
		from_port = 22
		to_port = 22
		protocol = "tcp"
		cidr_blocks = ["0.0.0.0/0"]
	}

	ingress {
		from_port = 80
		to_port = 80
		protocol = "tcp"
		cidr_blocks = ["0.0.0.0/0"]
	}

	egress {
		from_port = 0
		to_port = 0
		protocol = "-1"
		cidr_blocks = ["0.0.0.0/0"]
	}

}
#security group end here

#first instance code start here

resource "aws_instance" "good-morning" {
	ami = "ami-5b673c34"
	instance_type = "t2.micro"
	availability_zone = "ap-south-1a"
	security_groups = ["${aws_security_group.nilesh-ssh-http.name}"]
	key_name = "zoomkey"
	user_data = <<-EOF
		#!/bin/bash
		sudo yum install httpd -y
		sudo systemctl start httpd
		sudo systemctl enable httpd
		echo "<h1>sample webpage using terraform - server1</h1>" >> /var/www/html/index.html
	EOF

	tags = {
		Name = "webserver1"
	}

}
#first instance code end here

#second webserver code start here
resource "aws_instance" "good-morning2" {
        ami = "ami-5b673c34"
        instance_type = "t2.micro"
        availability_zone = "ap-south-1b"
        security_groups = ["${aws_security_group.nilesh-ssh-http.name}"]
        key_name = "zoomkey"
        user_data = <<-EOF
                #!/bin/bash
                sudo yum install httpd -y
                sudo systemctl start httpd
                sudo systemctl enable httpd
                echo "<h1>sample webpage using terraform - server2</h1>" >> /var/www/html/index.html
        EOF

        tags = {
                Name = "webserver2"
        }

}
#webserver2 end here

#elb start here

resource "aws_elb" "morning-elb" {
	name = "morning-elb"
	availability_zones = ["ap-south-1a", "ap-south-1b"]

	listener {
		instance_port = 80
		instance_protocol = "http"
		lb_port = 80
		lb_protocol = "http"
	}

#	listener {
#		instance_port = 443
#		instance_protocol = "https"
#		lb_port = 443
#		lb_protocol = "https"
#		ssl_certificate_id = "arn:....."
#	}

	health_check {
		healthy_threshold = 2
		unhealthy_threshold = 2
		timeout = 5
		target = "HTTP:80/"
		interval = 35
	}

	instances = ["${aws_instance.good-morning.id}", "${aws_instance.good-morning2.id}"]

	cross_zone_load_balancing = true
	idle_timeout = 300
	connection_draining = true
	connection_draining_timeout = 300

	tags = {
		Name = "morning-terraform-elb"
	}

}

#elb end here










